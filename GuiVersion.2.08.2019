#include "robot-config.h"
int redclosepicking = 0;
int redfarpicking = 0;
int blueclosepicking = 0;
int bluefarpicking = 0;
void buildoriginalscreen(int x)     
{
    //builds half the screen as the board
    Brain.Screen.setFillColor("#7e7e7e");
    Brain.Screen.setPenWidth(0);
    Brain.Screen.setPenColor(vex::color::white);
    Brain.Screen.drawRectangle(240-x,0,240,240);
    
    //Builds red starts squares
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.drawRectangle(240-x,80,40,40);
    Brain.Screen.drawRectangle(240-x,160,40,40);
    
    //Builds  blue start squares
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.drawRectangle(440-x,80,40,40);
    Brain.Screen.drawRectangle(440-x,160,40,40);
    
    //Builds auton and lift EXTEND area lines
    Brain.Screen.setFillColor(vex::color::white);
    //Horizontal lines  
    Brain.Screen.drawRectangle(240-x,119,40,2);
    Brain.Screen.drawRectangle(440-x,119,40,2);
    Brain.Screen.drawRectangle(280-x,199,160,2);
    //Vertical Lines
    Brain.Screen.drawRectangle(356-x,0,2,240);
    Brain.Screen.drawRectangle(362-x,0,2,240);
    Brain.Screen.drawRectangle(279-x,120,2,80);
    Brain.Screen.drawRectangle(439-x,120,2,80);
    
    //Builds flag poles
    Brain.Screen.setFillColor(vex::color::black);
    Brain.Screen.drawRectangle(278-x,0,4,40);
    Brain.Screen.drawRectangle(358-x,0,4,40);
    Brain.Screen.drawRectangle(438-x,0,4,40);
    
    //Builds blue caps standing caps (with two balls)
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(1);
    Brain.Screen.setPenColor(vex::color::black);
    Brain.Screen.drawCircle(300-x,60,8);
    Brain.Screen.drawCircle(300-x,60,3);
    Brain.Screen.drawCircle(340-x,220,8);
    Brain.Screen.drawCircle(340-x,220,3);
        //the two balls on each of the caps
    Brain.Screen.setFillColor(vex::color::yellow);
    Brain.Screen.drawCircle(296-x,55,2);
    Brain.Screen.drawCircle(304-x,65,2);
    Brain.Screen.drawCircle(340-x,225,2);
    Brain.Screen.drawCircle(340-x,215,2);
    
    //Builds side blue caps
    Brain.Screen.setFillColor(vex::color::black);
    Brain.Screen.drawCircle(380-x,100,6);
    Brain.Screen.drawCircle(380-x,180,6);
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.drawCircle(377-x,100,6);
    Brain.Screen.drawCircle(376-x,100,2);
    Brain.Screen.drawCircle(377-x,180,6);
    Brain.Screen.drawCircle(376-x,180,2);
    
    //Builds red caps standing caps (with two balls)
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenColor(vex::color::black);
    Brain.Screen.drawCircle(420-x,60,8);
    Brain.Screen.drawCircle(420-x,60,4);
    Brain.Screen.drawCircle(380-x,220,8);
    Brain.Screen.drawCircle(380-x,220,4);
            //the two balls on each of the caps
    Brain.Screen.setFillColor(vex::color::yellow);
    Brain.Screen.drawCircle(424-x,55,2);
    Brain.Screen.drawCircle(416-x,65,2);
    Brain.Screen.drawCircle(380-x,225,2);
    Brain.Screen.drawCircle(380-x,215,2);
    
    //Builds side red caps
    Brain.Screen.setFillColor(vex::color::black);
    Brain.Screen.drawCircle(339-x,100,6);
    Brain.Screen.drawCircle(339-x,180,6);
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.drawCircle(342-x,100,6);
    Brain.Screen.drawCircle(343-x,100,2);
    Brain.Screen.drawCircle(342-x,180,6);
    Brain.Screen.drawCircle(343-x,180,2);
    
    //builds platforms
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(300-x,120,40,40);
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(380-x,120,40,40);
    Brain.Screen.setFillColor(vex::color::yellow);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(340-x,120,40,40);
        
    //places balls on platforms
    Brain.Screen.setFillColor(vex::color::yellow);
    Brain.Screen.setPenWidth(1);
    Brain.Screen.setPenColor(vex::color::black);
    Brain.Screen.drawCircle(301-x,121,3);
    Brain.Screen.drawCircle(301-x,159,3);
    Brain.Screen.drawCircle(419-x,121,3);
    Brain.Screen.drawCircle(419-x,159,3);
    
    //place edges on platforms
    Brain.Screen.setFillColor(vex::color::black);
    Brain.Screen.drawCircle(341-x,121,3);
    Brain.Screen.drawCircle(341-x,159,3);
    Brain.Screen.drawCircle(379-x,121,3);
    Brain.Screen.drawCircle(379-x,159,3);
    
    // creates inside for platforsm
    Brain.Screen.setFillColor("#666666");
    Brain.Screen.setPenWidth(0);
    Brain.Screen.setPenColor(vex::color::black);
    Brain.Screen.drawRectangle(305-x,125,30,30);
    Brain.Screen.drawRectangle(345-x,125,30,30);
    Brain.Screen.drawRectangle(385-x,125,30,30);
 
}
void leftFlagToggle(bool TL, bool ML, bool BL)
{
  bool topL= TL;
  bool middleL= ML;
  bool bottomL= BL;
 
   Brain.Screen.setPenColor(vex::color::white);
   if(topL==true)
   {
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(282,0,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(290,0,3,8);   
   }
   else
   {
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(270,0,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(267,0,3,8); 
   }
   if(middleL==true)
   {
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(282,11,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(290,11,3,8);   
   }
   else
   {
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(270,11,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(267,11,3,8); 
   }
   if(bottomL==true)
   {
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(282,22,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(290,22,3,8);   
   }
   else
   {
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(270,22,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(267,22,3,8); 
   }
   
 
}
void middleFlagToggle(int TM, int MM, int BM)
{
  int topM= TM;
  int middleM= MM;
  int bottomM= BM;
  switch(topM)
  {
      case 1:
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(362,0,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(370,0,3,8);
    break;
      case 0:
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(362,0,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(370,0,3,8);
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(350,0,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(347,0,3,8); 
    break;
      case -1:
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(350,0,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(347,0,3,8); 
    break;
  }
  switch(middleM)
  {
      case 1:
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(362,11,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(370,11,3,8);
    break;
      case 0:
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(362,11,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(370,11,3,8);
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(350,11,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(347,11,3,8); 
    break;
      case -1:
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(350,11,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(347,11,3,8); 
    break;
  }
  switch(bottomM)
  {
      case 1:
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(362,22,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(370,11,3,8);
    break;
      case 0:
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(362,22,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(370,22,3,8);
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(350,22,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(347,22,3,8); 
    break;
      case -1:
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(350,22,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(347,22,3,8); 
    break;
  }
}
void rightFlagToggle(bool TR, bool MR, bool BR)
{
  bool topR= TR;
  bool middleR= MR;
  bool bottomR= BR;
  
  if(topR==true)
   {
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(430,0,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(427,0,3,8); 
   }
   else
   {
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(442,0,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(450,0,3,8);    
   }
   if(middleR==true)
   {
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(430,11,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(427,11,3,8);
   }
   else
   {
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(442,11,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(450,11,3,8);
   }
   if(bottomR==true)
   {
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(430,22,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(427,22,3,8);
   }
   else
   {
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(442,22,8,8);
    Brain.Screen.setFillColor(vex::color::green);
    Brain.Screen.drawRectangle(450,22,3,8);  
   }
}

void selectionbuttons()
{
    //Base choosing squares
    Brain.Screen.setFont(vex::fontType::mono20);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.setPenColor(vex::color::black);
    
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.drawRectangle(0,0,90,60);
    Brain.Screen.drawRectangle(0,60,90,60);
    
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.drawRectangle(0,120,90,60);
    Brain.Screen.drawRectangle(0,180,90,60);

    Brain.Screen.setFillColor("#b1b1b1");
    Brain.Screen.drawRectangle(180,0,60,240);
    //borders in between buttons
    Brain.Screen.setFillColor(vex::color::black);
    Brain.Screen.drawRectangle(0,59,90,2);
    Brain.Screen.drawRectangle(0,119,90,2);
    Brain.Screen.drawRectangle(0,179,90,2);
    Brain.Screen.drawRectangle(179,0,2,240);
    
    //puts the text
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.printAt(10,20,"Red Close");
    Brain.Screen.printAt(10,80,"Red Far");
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.printAt(10,140,"Blue Close");
    Brain.Screen.printAt(10,200,"Blue Far");
}
void picking()
{
    Brain.Screen.setFont(vex::fontType::mono20);
    Brain.Screen.setPenColor(vex::color::white);
    int xpos;
    int ypos;
    int battery;
    while(true)
    {
        if(Brain.Screen.pressing())//finds the position of where is Pressed
        {
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
        }
        //redclose
        if(xpos > 0 && xpos < 180 && ypos > 0 && ypos < 60)
        {
            Brain.Screen.setFillColor(vex::color::green);
            Brain.Screen.setPenWidth(0);
            Brain.Screen.drawRectangle(181,0,59,60);
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            if(xpos > 181 && xpos < 240 && ypos > 0 && ypos < 60)
            {
                Brain.Screen.clearScreen();
                Brain.Screen.setFillColor(vex::color::black);
                Brain.Screen.printAt(1,40,"Karthik:");
                Brain.Screen.printAt(1,65,"\"That is INTENSE.\"");
                break;
            }
            
        }
        //redfar
        if(xpos > 0 && xpos < 180 && ypos > 60 && ypos < 120)
        {
            Brain.Screen.setFillColor(vex::color::green);
            Brain.Screen.setPenWidth(0);
            Brain.Screen.drawRectangle(181,60,59,60);
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            if(xpos > 181 && xpos < 240 && ypos > 60 && ypos < 120)
            {
                Brain.Screen.clearScreen();
                Brain.Screen.setFillColor(vex::color::black);
                Brain.Screen.printAt(1,40,"Karthik:");
                Brain.Screen.printAt(1,65,"\"That is INTENSE.\"");
                break;
            }
        }
        //blueclose
        if(xpos > 0 && xpos < 180 && ypos > 120 && ypos < 180)
        {
            Brain.Screen.setFillColor(vex::color::green);
            Brain.Screen.setPenWidth(0);
            Brain.Screen.drawRectangle(181,120,59,60);
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            if(xpos > 181 && xpos < 240 && ypos > 120 && ypos < 180)
            {
                Brain.Screen.clearScreen();
                Brain.Screen.setFillColor(vex::color::black);
                Brain.Screen.printAt(1,40,"Karthik:");
                Brain.Screen.printAt(1,65,"\"That is INTENSE.\"");
                break;
            }
        }
        //bluefar
        if(xpos > 0 && xpos < 180 && ypos > 180 && ypos < 240)
        {
            Brain.Screen.setFillColor(vex::color::green);
            Brain.Screen.setPenWidth(0);
            Brain.Screen.drawRectangle(181,180,59,60);
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            if(xpos > 181 && xpos < 240 && ypos > 180 && ypos < 240)
            {
                Brain.Screen.clearScreen();
                Brain.Screen.setFillColor(vex::color::black);
                Brain.Screen.printAt(1,40,"Karthik:");
                Brain.Screen.printAt(1,65,"\"That is INTENSE.\"");
                break;
            }
        }
      
        if(Brain.Screen.pressing() && xpos < 180)
        {
            Brain.Screen.setFillColor("#b1b1b1");
            Brain.Screen.drawRectangle(181,0,59,240);
        }
    }
    while(1==1)
    {
       Brain.Screen.printAt(1,90,"Battery Capacity: %d%%",Brain.Battery.capacity());
       Brain.Screen.printAt(1,90,"Battery Temperature: %d%%",Brain.Battery.temperature());
       vex::task::sleep(500);
        
    }
}

void switchingmechanism()
{
    //build switches in order to switch between autons
    
    
}
    
void expermientalfinalproduct()
{
    Brain.Screen.clearScreen("#000080");
    buildoriginalscreen(120);
    Brain.Screen.setFillColor(vex::color::black);
    Brain.Screen.setPenWidth(0);
    Brain.Screen.drawRectangle(0,0,2,240);
    Brain.Screen.drawRectangle(0,0,2,240);
    Brain.Screen.drawRectangle(0,0,2,240);
    Brain.Screen.drawRectangle(0,0,2,240);
    Brain.Screen.drawRectangle(0,0,2,240);
    Brain.Screen.drawRectangle(0,0,2,240);
    Brain.Screen.drawRectangle();
    Brain.Screen.drawRectangle();
    Brain.Screen.drawRectangle();
    Brain.Screen.drawRectangle();
    Brain.Screen.drawRectangle();
    
    
}
   
}

int main() {
buildoriginalscreen(0);
rightFlagToggle(false,false,false);
middleFlagToggle(0,0,0);
leftFlagToggle(false,false,false);
selectionbuttons();
switchmechanise();
picking();
expermientalfinalproduct();

}
